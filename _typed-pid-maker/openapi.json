{"openapi":"3.0.1","info":{"title":"Typed PID Maker - RESTful API","description":"The KIT DM 2.0 Typed PID Maker is a service for obtaining and validating PID Infortion Types and Kernel Information Profiles, as defined by the Research Data Alliance.","contact":{"name":"KIT Data Manager Support","url":"https://github.com/kit-data-manager","email":"support@datamanager.kit.edu"},"license":{"name":"Apache 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0.html"},"version":"0.1"},"servers":[{"url":"http://localhost:8090","description":"Generated server url"}],"paths":{"/api/v1/pit/pid/**":{"get":{"tags":["typing-rest-resource-impl"],"summary":"Get the record of the given PID.","description":"Get the record to the given PID, if it exists.","operationId":"getRecord","responses":{"200":{"description":"Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PIDRecord"}},"application/vnd.datamanager.pid.simple+json":{"schema":{"$ref":"#/components/schemas/SimplePidRecord"}}}},"404":{"description":"Not found","content":{"text/plain":{}}}}},"put":{"tags":["typing-rest-resource-impl"],"summary":"Update an existing PID record","description":"Update an existing PID record using the record information from the request body.","operationId":"updatePID","requestBody":{"description":"The body containing all PID record values as they should be after the update.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PIDRecord"}},"application/vnd.datamanager.pid.simple+json":{"schema":{"$ref":"#/components/schemas/SimplePidRecord"}}},"required":true},"responses":{"500":{"description":"Server error. See body for details.","content":{"text/plain":{}}},"200":{"description":"Success.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PIDRecord"}},"application/vnd.datamanager.pid.simple+json":{"schema":{"$ref":"#/components/schemas/SimplePidRecord"}}}},"409":{"description":"Validation failed (conflict). See body for details.","content":{"text/plain":{}}}}},"head":{"tags":["typing-rest-resource-impl"],"summary":"Check if the given PID exists.","description":"Check if the PID with the idenfifier provided as the last path segment(s) is registered and resolvable.The body will contain a short human readable string, notifying about the result.","operationId":"isPidRegistered","responses":{"404":{"description":"Not found","content":{"text/plain":{}}},"200":{"description":"Found","content":{"text/plain":{}}}}}},"/api/v1/pit/pid/":{"post":{"tags":["typing-rest-resource-impl"],"summary":"Create a new PID record","description":"Create a new PID record using the record information from the request body.","operationId":"createPID","requestBody":{"description":"The body containing all PID record values as they should be in the new PIDs record.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PIDRecord"}},"application/vnd.datamanager.pid.simple+json":{"schema":{"$ref":"#/components/schemas/SimplePidRecord"}}},"required":true},"responses":{"201":{"description":"Created","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PIDRecord"}},"application/vnd.datamanager.pid.simple+json":{"schema":{"$ref":"#/components/schemas/SimplePidRecord"}}}},"500":{"description":"Server error. See body for details.","content":{"text/plain":{}}},"409":{"description":"Validation failed (conflict). See body for details.","content":{"text/plain":{}}}}}},"/api/v1/pit/type/**":{"head":{"tags":["typing-rest-resource-impl"],"summary":"Resource matching type?","description":"Check if the resource accessible via the provided identifier is matching the type provided as the last path segment(s). The check includes the test if all mandatory properties are in the record as well as an in-depth tests of the single elements for matching the sub-type's schema.","operationId":"isResourceMatchingType","parameters":[{"name":"identifier","in":"query","required":true,"schema":{"type":"string"}}],"responses":{"404":{"description":"Some resource (usually the given PID) could not be resolved.","content":{"text/plain":{}}},"200":{"description":"Resource is matching the type.","content":{"text/plain":{}}},"500":{"description":"Server error. See body for details.","content":{"text/plain":{}}},"409":{"description":"Resource is NOT matching the type.","content":{"text/plain":{}}}}}},"/api/v1/pit/profile/**":{"get":{"tags":["typing-rest-resource-impl"],"summary":"Get a profile","description":"Obtain the profile identified by the PID provided as the last path segment(s).","operationId":"getProfile","responses":{"404":{"description":"Not found","content":{"text/plain":{}}},"500":{"description":"Server error. See body for details.","content":{"text/plain":{}}},"200":{"description":"Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/TypeDefinition"}}}}}},"head":{"tags":["typing-rest-resource-impl"],"summary":"PID matching profile?","description":"Check if the PID record accessible via the provided identifier is matching the profile provided as the last path segment(s). The check only includes the test for mandatory fields according to the profile. For in-depth tests endpoint /type/{identifier} should be used.","operationId":"isPidMatchingProfile","parameters":[{"name":"identifier","in":"query","required":true,"schema":{"type":"string"}}],"responses":{"404":{"description":"Some resource (usually the given PID) could not be resolved.","content":{"text/plain":{}}},"200":{"description":"Resource is matching the type.","content":{"text/plain":{}}},"500":{"description":"Server error. See body for details.","content":{"text/plain":{}}},"409":{"description":"Resource is NOT matching the type.","content":{"text/plain":{}}}}}},"/api/v1/pit/known-pid":{"get":{"tags":["typing-rest-resource-impl"],"summary":"Returns all known PIDs. Supports paging, filtering criteria, and different formats.","description":"Returns all known PIDs, limited by the given page size and number. Several filtering criteria are also available. Known PIDs are defined as being stored in a local store. This store is not a cache! Instead, the service remembers every PID which it created (and resolved, depending on the configuration parameter `pit.storage.strategy` of the service) on request. Use the Accept header to adjust the format.","operationId":"findAll_1","parameters":[{"name":"created_after","in":"query","description":"The UTC time of the earliest creation timestamp of a returned PID.","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"created_before","in":"query","description":"The UTC time of the latest creation timestamp of a returned PID.","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"modified_after","in":"query","description":"The UTC time of the earliest modification timestamp of a returned PID.","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"modified_before","in":"query","description":"The UTC time of the latest modification timestamp of a returned PID.","required":false,"schema":{"type":"string","format":"date-time"}},{"name":"page","in":"query","description":"Zero-based page index (0..N)","schema":{"type":"integer","default":0}},{"name":"size","in":"query","description":"The size of the page to be returned","schema":{"type":"integer","default":20}},{"name":"sort","in":"query","description":"Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.","schema":{"type":"array","items":{"type":"string"}}},{"name":"Accept","in":"header","schema":{"type":"string","enum":["application/tabulator+json"]}}],"responses":{"200":{"description":"If the request was valid. May return an empty list.","content":{"application/hal+json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/KnownPid"}}},"application/tabulator+json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/TabulatorPaginationFormatKnownPid"},{"$ref":"#/components/schemas/TabulatorPaginationFormat"}]}}}}}}},"/api/v1/pit/known-pid/**":{"get":{"tags":["typing-rest-resource-impl"],"summary":"Returns a PID and its timestamps from the local store, if available.","description":"Returns a PID from the local store. This store is not a cache! Instead, the service remembers every PID which it created (and resolved, depending on the configuration parameter `pit.storage.strategy` of the service) on request. If this PID is known, it will be returned together with the timestamps of creation and modification executed on this PID by this service.","operationId":"findByPid","responses":{"200":{"description":"If the PID is known and its information was returned.","content":{"application/hal+json":{"schema":{"$ref":"#/components/schemas/KnownPid"}}}},"404":{"description":"If the PID is unknown.","content":{"text/plain":{}}}}}}},"components":{"schemas":{"PIDRecord":{"type":"object","properties":{"pid":{"type":"string"},"entries":{"type":"object","additionalProperties":{"type":"array","items":{"$ref":"#/components/schemas/PIDRecordEntry"}}}}},"PIDRecordEntry":{"type":"object","properties":{"key":{"type":"string"},"name":{"type":"string"},"value":{"type":"string"}}},"SimplePair":{"type":"object","properties":{"key":{"type":"string"},"value":{"type":"string"}}},"SimplePidRecord":{"type":"object","properties":{"pid":{"type":"string"},"record":{"type":"array","items":{"$ref":"#/components/schemas/SimplePair"}}}},"Contributor":{"type":"object","properties":{"identifiedUsing":{"type":"string"},"name":{"type":"string"},"details":{"type":"string"}}},"ProvenanceInformation":{"type":"object","properties":{"contributors":{"uniqueItems":true,"type":"array","items":{"$ref":"#/components/schemas/Contributor"}},"creationDate":{"type":"string","format":"date-time"},"lastModificationDate":{"type":"string","format":"date-time"}}},"Schema":{"type":"object","properties":{"title":{"type":"string"},"description":{"type":"string"},"id":{"type":"string"},"schemaLocation":{"type":"string","deprecated":true},"location":{"$ref":"#/components/schemas/SchemaLocation"},"defaultValue":{"type":"object"},"nullable":{"type":"boolean"},"readOnly":{"type":"boolean"},"writeOnly":{"type":"boolean"},"unprocessedProperties":{"type":"object","additionalProperties":{"type":"object"}}}},"SchemaLocation":{"type":"object"},"TypeDefinition":{"type":"object","properties":{"name":{"type":"string"},"identifier":{"type":"string"},"description":{"type":"string"},"optional":{"type":"boolean"},"repeatable":{"type":"boolean"},"expression":{"type":"string"},"value":{"type":"string"},"jsonSchema":{"$ref":"#/components/schemas/Schema"},"provenance":{"$ref":"#/components/schemas/ProvenanceInformation"},"schema":{"type":"string","writeOnly":true},"properties":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/TypeDefinition"}}}},"KnownPid":{"required":["created","modified","pid"],"type":"object","properties":{"pid":{"type":"string"},"created":{"type":"string","format":"date-time"},"modified":{"type":"string","format":"date-time"}}},"TabulatorPaginationFormat":{"type":"object","properties":{"data":{"type":"array","items":{"type":"object"}},"last_page":{"type":"integer","format":"int32"}}},"TabulatorPaginationFormatKnownPid":{"type":"object","properties":{"data":{"type":"array","items":{"$ref":"#/components/schemas/KnownPid"}},"last_page":{"type":"integer","format":"int32"}}}},"securitySchemes":{"bearer-jwt":{"type":"http","scheme":"bearer","bearerFormat":"JWT"}}}}